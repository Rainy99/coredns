load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "black_lies.go",
        "cache.go",
        "dnskey.go",
        "dnssec.go",
        "handler.go",
        "responsewriter.go",
        "rrsig.go",
        "setup.go",
    ],
    importpath = "github.com/coredns/coredns/plugin/dnssec",
    visibility = ["//visibility:public"],
    deps = [
        "//core/dnsserver:go_default_library",
        "//plugin:go_default_library",
        "//plugin/metrics:go_default_library",
        "//plugin/pkg/cache:go_default_library",
        "//plugin/pkg/log:go_default_library",
        "//plugin/pkg/response:go_default_library",
        "//plugin/pkg/singleflight:go_default_library",
        "//request:go_default_library",
        "@com_github_caddyserver_caddy//:go_default_library",
        "@com_github_miekg_dns//:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@org_golang_x_crypto//ed25519:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "black_lies_bitmap_test.go",
        "black_lies_test.go",
        "cache_test.go",
        "dnssec_test.go",
        "handler_test.go",
        "log_test.go",
        "setup_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//plugin/file:go_default_library",
        "//plugin/pkg/cache:go_default_library",
        "//plugin/pkg/dnstest:go_default_library",
        "//plugin/pkg/log:go_default_library",
        "//plugin/test:go_default_library",
        "//request:go_default_library",
        "@com_github_caddyserver_caddy//:go_default_library",
        "@com_github_miekg_dns//:go_default_library",
    ],
)
