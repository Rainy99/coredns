load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "server.go",
    ],
    importpath = "github.com/coredns/coredns/test",
    visibility = ["//visibility:public"],
    deps = [
        "//core:go_default_library",
        "//core/dnsserver:go_default_library",
        "//core/plugin:go_default_library",
        "@com_github_caddyserver_caddy//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "auto_test.go",
        "cache_test.go",
        "chaos_test.go",
        "compression_scrub_test.go",
        "ds_file_test.go",
        "edns0_test.go",
        "erratic_autopath_test.go",
        "example_test.go",
        "file_cname_proxy_test.go",
        "file_reload_test.go",
        "file_serve_test.go",
        "file_srv_additional_test.go",
        "file_test.go",
        "file_upstream_test.go",
        "file_xfr_test.go",
        "grpc_test.go",
        "hosts_file_test.go",
        "log_test.go",
        "metrics_test.go",
        "miek_test.go",
        "plugin_dnssec_test.go",
        "proxy_health_test.go",
        "proxy_test.go",
        "readme_test.go",
        "reload_test.go",
        "reverse_test.go",
        "rewrite_test.go",
        "secondary_test.go",
        "server_reverse_test.go",
        "server_test.go",
        "template_upstream_test.go",
        "wildcard_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//core/dnsserver:go_default_library",
        "//coremain:go_default_library",
        "//pb:go_default_library",
        "//plugin/metrics:go_default_library",
        "//plugin/metrics/vars:go_default_library",
        "//plugin/pkg/log:go_default_library",
        "//plugin/test:go_default_library",
        "@com_github_caddyserver_caddy//:go_default_library",
        "@com_github_miekg_dns//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)
